{"ast":null,"code":"var _jsxFileName = \"/home/lofy/Dev-WebTraining/React-Projects/react-autocomplete/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport './custom.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //here we initialize the state\n  const [users, setUseres] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    const loadUsers = async () => {\n      const response = await axios.get(\"https://reqres.in/api/users\");\n      setUseres(response.data.data);\n    };\n\n    loadUsers();\n  }, []); //to put the suggestion in the input field\n\n  const onSuggestHandler = text => {\n    setText(text);\n    setSuggestions([]);\n  };\n\n  const onChangeHandler = text => {\n    let matchs = [];\n\n    if (text.length > 0) {\n      matchs = users.filter(user => {\n        const regex = new RegExp(`${text}`, \"gi\");\n        return user.email.match(regex);\n      });\n    } //here to pass the filter results\n\n\n    setSuggestions(matchs); //to update the text by the user input\n\n    setText(text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"col-md-12 input\",\n      style: {\n        marginTop: 20\n      },\n      type: \"text\",\n      onChange: e => onChangeHandler(e.target.value),\n      onBlur: () => {\n        setTimeout(() => {\n          setSuggestions([]);\n        }, 100);\n      },\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), suggestions && suggestions.map((suggestion, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggetion col-md-12 justify-content-md-center\",\n      onClick: () => onSuggestHandler(suggestion.email),\n      children: [suggestion.email, \" \"]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lyW3nNshOGWVtxY4OMzSr0TJWE8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lofy/Dev-WebTraining/React-Projects/react-autocomplete/src/App.js"],"names":["axios","useEffect","useState","App","users","setUseres","text","setText","suggestions","setSuggestions","loadUsers","response","get","data","onSuggestHandler","onChangeHandler","matchs","length","filter","user","regex","RegExp","email","match","marginTop","e","target","value","setTimeout","map","suggestion","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,eAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBH,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,6BAAV,CAAvB;AACAP,MAAAA,SAAS,CAACM,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAT;AACD,KAHD;;AAIAH,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT,CAPa,CAcb;;AACA,QAAMI,gBAAgB,GAAGR,IAAD,IAAU;AAChCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAHD;;AAKA,QAAMM,eAAe,GAAIT,IAAD,IAAU;AAChC,QAAIU,MAAM,GAAG,EAAb;;AACA,QAAGV,IAAI,CAACW,MAAL,GAAc,CAAjB,EAAmB;AACjBD,MAAAA,MAAM,GAAGZ,KAAK,CAACc,MAAN,CAAaC,IAAI,IAAG;AAC3B,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEf,IAAK,EAAnB,EAAsB,IAAtB,CAAd;AACA,eAAOa,IAAI,CAACG,KAAL,CAAWC,KAAX,CAAiBH,KAAjB,CAAP;AACD,OAHQ,CAAT;AAID,KAP+B,CAQhC;;;AACAX,IAAAA,cAAc,CAACO,MAAD,CAAd,CATgC,CAUhC;;AACAT,IAAAA,OAAO,CAACD,IAAD,CAAP;AAED,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEE;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,KAAK,EAAE;AAACkB,QAAAA,SAAS,EAAC;AAAX,OAA1C;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAGC,CAAD,IAAOV,eAAe,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAFlC;AAGE,MAAA,MAAM,EAAE,MAAI;AACVC,QAAAA,UAAU,CAAC,MAAI;AACbnB,UAAAA,cAAc,CAAC,EAAD,CAAd;AACD,SAFS,EAER,GAFQ,CAAV;AAGD,OAPH;AAQE,MAAA,KAAK,EAAEH;AART;AAAA;AAAA;AAAA;AAAA,YAFF,EAaGE,WAAW,IAAIA,WAAW,CAACqB,GAAZ,CAAgB,CAACC,UAAD,EAAaC,CAAb,kBAChC;AAAa,MAAA,SAAS,EAAC,+CAAvB;AACA,MAAA,OAAO,EAAE,MAAKjB,gBAAgB,CAACgB,UAAU,CAACR,KAAZ,CAD9B;AAAA,iBAECQ,UAAU,CAACR,KAFZ;AAAA,OAAUS,CAAV;AAAA;AAAA;AAAA;AAAA,YADgB,CAblB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAxDQ5B,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport './custom.scss';\n\nfunction App() {\n\n  //here we initialize the state\n  const [users, setUseres] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  useEffect(() => {\n    const loadUsers = async () => {\n      const response = await axios.get(\"https://reqres.in/api/users\");\n      setUseres(response.data.data);\n    };\n    loadUsers();\n  }, []);\n  //to put the suggestion in the input field\n  const onSuggestHandler =(text) => {\n    setText(text);\n    setSuggestions([])\n  }\n\n  const onChangeHandler = (text) => {\n    let matchs = []\n    if(text.length > 0){\n      matchs = users.filter(user =>{\n        const regex = new RegExp(`${text}`, \"gi\")\n        return user.email.match(regex)\n      })\n    }\n    //here to pass the filter results\n    setSuggestions(matchs)\n    //to update the text by the user input\n    setText(text);\n   \n  };\n\n  return (\n    <div className=\"container\">\n    \n      <input className=\"col-md-12 input\" style={{marginTop:20}}\n        type=\"text\"\n        onChange={(e) => onChangeHandler(e.target.value)}\n        onBlur={()=>{\n          setTimeout(()=>{\n            setSuggestions([])\n          },100);\n        }}\n        value={text}\n      />\n\n      {suggestions && suggestions.map((suggestion, i) =>\n      <div key={i} className=\"suggetion col-md-12 justify-content-md-center\"\n      onClick={()=> onSuggestHandler(suggestion.email)}> \n      {suggestion.email} </div>\n      )}  \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}