{"ast":null,"code":"var _jsxFileName = \"/home/lofy/Dev-WebTraining/React-Projects/react-autocomplete/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./custom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [users, setUseres] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    const loadUsers = async () => {\n      const response = await axios.get(\"https://reqres.in/api/users\");\n      setUseres(response.data.data);\n    };\n\n    loadUsers();\n  }, []);\n\n  const onChangeHandler = text => {\n    let matchs = [];\n\n    if (text.length > 0) {\n      matchs = users.filter(user => {\n        const regex = new RegExp(`${text}`, \"gi\");\n        return user.email.match(regex);\n      });\n    }\n\n    console.log(\"matchs\", matchs);\n    setSuggestions(matchs);\n    setText(text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"col-md-12 input\",\n      style: {\n        marginTop: 20\n      },\n      type: \"text\",\n      onChange: e => onChangeHandler(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), suggestions && suggestions.map((suggestion, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggetion col-md-12 justify-content-md-center\",\n      children: [\" \", suggestion.email, \" \"]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lyW3nNshOGWVtxY4OMzSr0TJWE8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lofy/Dev-WebTraining/React-Projects/react-autocomplete/src/App.js"],"names":["axios","useEffect","useState","App","users","setUseres","text","setText","suggestions","setSuggestions","loadUsers","response","get","data","onChangeHandler","matchs","length","filter","user","regex","RegExp","email","match","console","log","marginTop","e","target","value","map","suggestion","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,cAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBH,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,6BAAV,CAAvB;AACAP,MAAAA,SAAS,CAACM,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAT;AACD,KAHD;;AAIAH,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMI,eAAe,GAAIR,IAAD,IAAU;AAChC,QAAIS,MAAM,GAAG,EAAb;;AACA,QAAIT,IAAI,CAACU,MAAL,GAAc,CAAlB,EAAqB;AACnBD,MAAAA,MAAM,GAAGX,KAAK,CAACa,MAAN,CAAcC,IAAD,IAAU;AAC9B,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEd,IAAK,EAAnB,EAAsB,IAAtB,CAAd;AACA,eAAOY,IAAI,CAACG,KAAL,CAAWC,KAAX,CAAiBH,KAAjB,CAAP;AACD,OAHQ,CAAT;AAID;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,MAAtB;AACAN,IAAAA,cAAc,CAACM,MAAD,CAAd;AAEAR,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,KAAK,EAAE;AAAEmB,QAAAA,SAAS,EAAE;AAAb,OAFT;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,EAAGC,CAAD,IAAOZ,eAAe,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAJlC;AAKE,MAAA,KAAK,EAAEtB;AALT;AAAA;AAAA;AAAA;AAAA,YADF,EAQGE,WAAW,IACVA,WAAW,CAACqB,GAAZ,CAAgB,CAACC,UAAD,EAAaC,CAAb,kBACd;AAEE,MAAA,SAAS,EAAC,+CAFZ;AAAA,iBAIG,GAJH,EAKGD,UAAU,CAACT,KALd,EAKqB,GALrB;AAAA,OACOU,CADP;AAAA;AAAA;AAAA;AAAA,YADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAhDQ5B,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./custom.css\";\n\nfunction App() {\n  const [users, setUseres] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  useEffect(() => {\n    const loadUsers = async () => {\n      const response = await axios.get(\"https://reqres.in/api/users\");\n      setUseres(response.data.data);\n    };\n    loadUsers();\n  }, []);\n\n  const onChangeHandler = (text) => {\n    let matchs = [];\n    if (text.length > 0) {\n      matchs = users.filter((user) => {\n        const regex = new RegExp(`${text}`, \"gi\");\n        return user.email.match(regex);\n      });\n    }\n    console.log(\"matchs\", matchs);\n    setSuggestions(matchs);\n\n    setText(text);\n  };\n\n  return (\n    <div className=\"container\">\n      <input\n        className=\"col-md-12 input\"\n        style={{ marginTop: 20 }}\n        type=\"text\"\n        onChange={(e) => onChangeHandler(e.target.value)}\n        value={text}\n      />\n      {suggestions &&\n        suggestions.map((suggestion, i) => (\n          <div\n            key={i}\n            className=\"suggetion col-md-12 justify-content-md-center\"\n          >\n            {\" \"}\n            {suggestion.email}{\" \"}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}